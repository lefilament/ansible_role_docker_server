version: "2.1"
services:
    proxy:
        image: traefik:v2.4
        container_name: inverseproxy
        environment:
            TZ: "Europe/Paris"
        networks:
            shared:
              aliases:
{% if inventory_hostname in groups['docker_auth'] %}
                - {{ ldap_url }}
                - {{ sso_url }}
{% endif %}
{% if inventory_hostname in groups['docker_drawio'] %}
                - {{ drawio_url }}
{% endif %}
{% if inventory_hostname in groups['docker_etherpad'] %}
                - {{ pad_url }}
{% endif %}
{% if inventory_hostname in groups['docker_framadate'] %}
                - {{ date_url }}
{% endif %}
{% if inventory_hostname in groups['docker_gitlab'] %}
                - {{ git_url }}
{% endif %}
{% if inventory_hostname in groups['docker_mattermost'] %}
                - {{ mm_url }}
{% endif %}
{% if inventory_hostname in groups['docker_nagios'] %}
                - {{ nagios_url }}
{% endif %}
{% if inventory_hostname in groups['docker_nextcloud'] | union(groups['docker_owncloud']) %}
                - {{ cloud_url }}
{% if cloud_collabora is defined %}
                - {{ cloud_collabora_url }}
{% endif %}
{% if cloud_onlyoffice is defined %}
                - {{ cloud_onlyoffice_url }}
{% endif %}
{% endif %}
{% if inventory_hostname in groups['docker_odoo'] %}
{% if odoo_prod is defined %}
                - {{ odoo_prod.url }}
{% endif %}
{% for instance in odoo_nonprod_instances | default([]) %}
                - {{ instance.url }}
{% endfor %}
{% endif %}
{% if inventory_hostname in groups['docker_privatebin'] %}
                - {{ privatebin_url }}
{% endif %}
{% if inventory_hostname in groups['docker_tuleap'] %}
                - {{ tuleap_url }}
{% endif %}
{% if metabase is defined and metabase %}
            bi:
{% endif %}
            smtp:
            private:
            public:
        volumes:
            - cert:/etc/traefik/acme:rw,Z
            - logs:/var/log/traefik/:rw
            - ./traefik.toml:/etc/traefik/traefik.toml:ro
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - dockersocket
        restart: unless-stopped

    dockersocket:
        image: tecnativa/docker-socket-proxy
        container_name: inverseproxy_socket
        privileged: true
        userns_mode: "host"
        networks:
            private:
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            CONTAINERS: 1
            NETWORKS: 1
            SERVICES: 1
            SWARM: 1
            TASKS: 1
        restart: unless-stopped

networks:
    shared:
        internal: true
        driver_opts:
            encrypted: 1
{% if metabase is defined and metabase %}
    bi:
        internal: true
        driver_opts:
            encrypted: 1
{% endif %}
    smtp:
        internal: true
        driver_opts:
            encrypted: 1
    private:
        internal: true
        driver_opts:
            encrypted: 1
    public:
        driver_opts:
            encrypted: 1

volumes:
    cert:
    logs:
